# define function
- int findMax(vector<int> &v)
	- max = v[0]
	- for i=1 to v.size()-1:
		- if max < v[i]:
			- max = v[i]
	- return max

# main
- cin >> N
- vector<int> prize(N,0)
- for j=0 to N-1:
	- vector<int> dice_cnt(6,0)
	- for i=0 to 3:		
		- cin >> tmp
		- dice_cnt[tmp-1] += 1
	- vector<int> v
	- for i=0 to 5:
		- if dice_cnt[i]==4:
			- prize[j] = 50000 + (i+1) * 5000
		- else if dice_cnt[i]==3:
			- prize[j] = 10000 + (i+1) * 1000
		- else if dice_cnt[i]==2:
			- v.push_back(i+1)
	- if v.size()==2:
		- prize[j] = 2000 + v[0]*500 + v[1]*500
	- else if v.size()==1:
		- prize[j] = 1000 + v[0]*100
	- else if prize[j]==0:
		- val = 1
		- for k=1 to 5:
			- if dice_cnt[k]==1:
				- val = k+1
		- prize[j] = val * 100
- cout << findMax(prize) << "\n"
			