<Problem>
예전에는 운영체제에서 크로아티아 알파벳을 입력할 수가 없었다. 
따라서, 다음과 같이 크로아티아 알파벳을 변경해서 입력했다.

크로아티아 알파벳	변경
č	c=
ć	c-
dž	dz=
đ	d-
lj	lj
nj	nj
š	s=
ž	z=
예를 들어, ljes=njak은 크로아티아 알파벳 6개(lj, e, š, nj, a, k)로 이루어져 있다. 
단어가 주어졌을 때, 몇 개의 크로아티아 알파벳으로 이루어져 있는지 출력한다.

dž는 무조건 하나의 알파벳으로 쓰이고, d와 ž가 분리된 것으로 보지 않는다. lj와 nj도 마찬가지이다. 
위 목록에 없는 알파벳은 한 글자씩 센다.

<Solution>
- use the method "find("string", index)" of string class
- count the words in two-alphabets and the ones in three-alphabets
	- differentiate the count of "z=" from other words in two-alpha because it overlaps with "dz="
	- two_word_cnt = two_word_cnt(except for "z=") + z_equal_cnt - three_word_cnt
	- general_alpha_cnt = total_len_str - 2*two_word_cnt - 3*three_word_cnt
	- result = general_alpha_cnt + two_word_cnt + three_word_cnt
- use loop to search for all modified alphabets in the input string 
	- ex) while(str.find("c=", index) != string::npos) do:
		- index = str.find("c=", index) + 1
	- implement the above eight loops, "c=", "c-", "s=" ... 




